#!/bin/bash
set -euxo pipefail

#-------
# Parcel fabric
#-------

PSQL="psql $DATABASE_URL -v ON_ERROR_STOP=1"

# rename downloaded file so ogr can read without unzipping
curl \
  -o /tmp/pmbc_parcel_fabric_poly_svw.gdb.zip \
  https://pub.data.gov.bc.ca/datasets/4cf233c2-f020-4f7a-9b87-1923252fbc24/pmbc_parcel_fabric_poly_svw.zip

ogr2ogr \
   -f PostgreSQL \
   PG:$DATABASE_URL \
   --config PG_USE_COPY YES \
   -overwrite \
   -t_srs EPSG:3005 \
   -dim XY \
   -lco GEOMETRY_NAME=geom \
   -lco FID=PARCEL_FABRIC_POLY_ID \
   -nln bcdata.pmbc_parcel_fabric_poly_svw \
   /tmp/pmbc_parcel_fabric_poly_svw.gdb.zip \
   pmbc_parcel_fabric_poly_svw

# load to target & drop temp
# note that schemas do not quite match
$PSQL -c "truncate whse_cadastre.pmbc_parcel_fabric_poly_svw;
          insert into whse_cadastre.pmbc_parcel_fabric_poly_svw (
            parcel_fabric_poly_id ,
            parcel_name           ,
            plan_number           ,
            pin                   ,
            pid_number            ,
            parcel_status         ,
            parcel_class          ,
            owner_type            ,
            parcel_start_date     ,
            municipality          ,
            regional_district     ,
            when_updated          ,
            geom
          )
          select
            parcel_fabric_poly_id ,
            parcel_name           ,
            plan_number           ,
            pin                   ,
            pid                   ,
            parcel_status         ,
            parcel_class          ,
            owner_type            ,
            parcel_start_date     ,
            municipality          ,
            regional_district     ,
            when_updated          ,
            geom
          from bcdata.pmbc_parcel_fabric_poly_svw"
$PSQL -c "drop table bcdata.pmbc_parcel_fabric_poly_svw"